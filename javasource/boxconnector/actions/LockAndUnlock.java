// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package boxconnector.actions;

import static boxconnector.proxies.microflows.Microflows.lockAndUnlockImpl;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * To lock and unlock files.
 * 
 * Required
 * 
 * BoxFile: The file to lock/unlock
 * The _id attribute is required
 * 
 * Lock: The lock properties
 * The _type attribute is required and can not be empty
 * 
 * The others attributes are optional.
 */
public class LockAndUnlock extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __BoxFileParameter1;
	private boxconnector.proxies.BoxFile BoxFileParameter1;
	private IMendixObject __Lock;
	private boxconnector.proxies.BoxFileLock Lock;

	public LockAndUnlock(IContext context, IMendixObject BoxFileParameter1, IMendixObject Lock)
	{
		super(context);
		this.__BoxFileParameter1 = BoxFileParameter1;
		this.__Lock = Lock;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.BoxFileParameter1 = __BoxFileParameter1 == null ? null : boxconnector.proxies.BoxFile.initialize(getContext(), __BoxFileParameter1);

		this.Lock = __Lock == null ? null : boxconnector.proxies.BoxFileLock.initialize(getContext(), __Lock);

		// BEGIN USER CODE
		Boolean result = lockAndUnlockImpl(getContext(), BoxFileParameter1, Lock);
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "LockAndUnlock";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
