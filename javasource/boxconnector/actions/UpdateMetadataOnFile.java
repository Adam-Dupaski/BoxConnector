// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package boxconnector.actions;

import static boxconnector.proxies.microflows.Microflows.updateMetadataOnFileImpl;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Used to update the template instance. 
 * Updates can be either add, replace, remove , test, move, or copy. 
 * The template instance can only be updated if the template instance already exists. 
 * When editing metadata, only values that adhere to the metadata template schema will be accepted.
 * 
 * The update is applied atomically. If any errors occur during the application of the update operations, the metadata instance remains unchanged.
 * 
 * Required
 * BoxFile
 * The _id attribute is required
 * 
 * Scope: The scope of the object.
 * 
 * BoxTemplate: The template to use.
 * The templateKey attribute is required
 * At least 1 MetadataValue must be provided with type and corresponding value.
 * 
 * UpdateMetadataList: The list of changes to apply
 * 
 * UpdateMetadata objects must be set as follow:
 * 
 * Operation: the operation to apply
 * TypeMetadata: the type of the metadata
 * Key: The key name of the metadata
 * StrValue/FloatValue/DateValue: The corresponding value to be set or tested. Required for add, replace, and test operations. 
 * For add, if value already exists, then previous value will be overwritten by the new value. 
 * For replace, the metadata value must exist before replacing.
 * For test, the value of the existing metadata instance must match the specified value.
 * 
 * FromBoxMetadata: The key to the Metadata source.
 * This value is required only in case of Move or Copy operation.
 * 
 */
public class UpdateMetadataOnFile extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __BoxFileParameter1;
	private boxconnector.proxies.BoxFile BoxFileParameter1;
	private IMendixObject __BoxTemplateParameter1;
	private boxconnector.proxies.BoxTemplate BoxTemplateParameter1;
	private boxconnector.proxies.MetadataScope Scope;
	private java.util.List<IMendixObject> __UpdateMetadataList;
	private java.util.List<boxconnector.proxies.UpdateMetadata> UpdateMetadataList;

	public UpdateMetadataOnFile(IContext context, IMendixObject BoxFileParameter1, IMendixObject BoxTemplateParameter1, java.lang.String Scope, java.util.List<IMendixObject> UpdateMetadataList)
	{
		super(context);
		this.__BoxFileParameter1 = BoxFileParameter1;
		this.__BoxTemplateParameter1 = BoxTemplateParameter1;
		this.Scope = Scope == null ? null : boxconnector.proxies.MetadataScope.valueOf(Scope);
		this.__UpdateMetadataList = UpdateMetadataList;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.BoxFileParameter1 = __BoxFileParameter1 == null ? null : boxconnector.proxies.BoxFile.initialize(getContext(), __BoxFileParameter1);

		this.BoxTemplateParameter1 = __BoxTemplateParameter1 == null ? null : boxconnector.proxies.BoxTemplate.initialize(getContext(), __BoxTemplateParameter1);

		this.UpdateMetadataList = new java.util.ArrayList<boxconnector.proxies.UpdateMetadata>();
		if (__UpdateMetadataList != null)
			for (IMendixObject __UpdateMetadataListElement : __UpdateMetadataList)
				this.UpdateMetadataList.add(boxconnector.proxies.UpdateMetadata.initialize(getContext(), __UpdateMetadataListElement));

		// BEGIN USER CODE
		Boolean result = updateMetadataOnFileImpl(getContext(), BoxFileParameter1, BoxTemplateParameter1, Scope, UpdateMetadataList);
		return result;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "UpdateMetadataOnFile";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
